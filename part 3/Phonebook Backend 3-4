const express = require('express');
const app = express();
const morgan = require('morgan');
const bodyParser = require('body-parser');

// Use middleware to log requests
app.use(morgan('tiny'));
app.use(bodyParser.json());

// Sample phonebook data (replace with your actual data)
let phonebook = [
  {
    id: 1,
    name: 'John Doe',
    phoneNumber: '123-456-7890',
  },
  {
    id: 2,
    name: 'Jane Smith',
    phoneNumber: '987-654-3210',
  },
];

// Helper function to generate a unique ID
const generateId = () => {
  const maxId = phonebook.length > 0 ? Math.max(...phonebook.map(person => person.id)) : 0;
  return maxId + 1;
};

app.delete('/api/persons/:id', (req, res) => {
  const id = parseInt(req.params.id);

  // Find the index of the person with the given ID
  const personIndex = phonebook.findIndex(entry => entry.id === id);

  if (personIndex === -1) {
    // If the entry is not found, respond with a 404 Not Found status
    return res.status(404).json({ error: 'Person not found' });
  }

  // Remove the person from the phonebook array
  phonebook = phonebook.filter(entry => entry.id !== id);

  // Respond with a 204 No Content status to indicate successful deletion
  res.status(204).end();
});

const PORT = process.env.PORT || 3001;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
