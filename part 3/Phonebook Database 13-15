app.delete('/api/phonebook/:id', (req, res) => {
  const id = req.params.id;

  // Use the Person model to find and remove the entry by ID
  Person.findByIdAndRemove(id)
    .then(() => {
      res.status(204).end(); // Respond with No Content on success
    })
    .catch(error => {
      // Handle the error and pass it to the error handling middleware
      next(error);
    });
});


// Error handling middleware
app.use((error, req, res, next) => {
  console.error('Error:', error);

  // Handle different types of errors and respond accordingly
  if (error.name === 'CastError' && error.kind === 'ObjectId') {
    return res.status(400).json({ error: 'Malformatted ID' });
  }

  if (error.name === 'ValidationError') {
    return res.status(400).json({ error: error.message });
  }

  return res.status(500).json({ error: 'Internal Server Error' });
});
