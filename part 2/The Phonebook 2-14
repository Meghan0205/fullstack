<!-- Example phonebook entry -->
<div class="phonebook-entry">
  <span>Name: John Doe</span>
  <span>Phone: 123-456-7890</span>
  <button class="delete-button">Delete</button>
</div>


// phonebook.js

// Assuming you have a list of phonebook entries
const phonebookList = document.querySelector('#phonebook-list');

// Add event delegation for delete buttons
phonebookList.addEventListener('click', async (e) => {
  if (e.target.classList.contains('delete-button')) {
    // Confirm the deletion with the user
    const confirmed = window.confirm('Are you sure you want to delete this contact?');
    
    if (confirmed) {
      // Get the ID of the contact to delete (you may need to store this in data attributes)
      const contactId = e.target.getAttribute('data-contact-id');

      try {
        // Use the axios library to make an HTTP DELETE request
        await axios.delete(`/api/persons/${contactId}`);

        // Handle successful deletion, e.g., remove the entry from the UI
        e.target.parentElement.remove();
      } catch (error) {
        console.error('Error:', error);
      }
    }
  }
});


// server.js (or your backend file)

const express = require('express');
const app = express();
const port = 3001;

// ... Other middleware and routes ...

// DELETE endpoint to delete a contact by ID
app.delete('/api/persons/:id', (req, res) => {
  const contactId = req.params.id;

  // Implement code to delete the contact with the given ID from your data store (e.g., a database)
  // After successful deletion, respond with a success status code
  // Handle errors if the contact does not exist or if there's an issue with the deletion
});

// ... Other routes ...

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});
